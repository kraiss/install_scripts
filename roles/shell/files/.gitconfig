[user]
	name = Pierrick Rassat
	email = pierrick.rassat@kelkoogroup.com
	signingkey = CBC4BC645B1047AB
[alias]
	debug = !GIT_TRACE=1 git
	# Execute a git command in subfolders
	all = !"for f in *; do echo '---' && echo $f && git -C $f $@; done; echo completed git all "
	# For when your mind wander and you type git twice
	git = !sh -c 'git $1' -

	# helper aliases
	branch-get-current = rev-parse --abbrev-ref HEAD
	branch-get-default = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
	switch-main = !git branch-get-default | xargs git switch $1

	# Basic aliases
	ci = commit
	cam = commit -am
	cm = commit -m
	co = checkout
	cob = checkout -b
	df = diff
	pick = cherry-pick
	rebc = rebase --continue
	reba = rebase --abort
	st = status
	sw = switch
	unstash = stash apply

	# Rebase and pull aliases
	rebi = !sh -c 'git rebase -i HEAD~$1'
	## Rebase current on main branch
	main-rebase = !sh -c 'git branch-main-rebase \"$(git branch-get-current)\"' -
	mainreb = main-rebase
	## Rebase branch on main branch
	branch-main-rebase = !sh -c 'MAIN=$(git branch-get-default) && git main-update && git switch \"$1\" && git rebase $MAIN' -
	## Switch to main branch, pull and fetch
	main-update = !git switch-main && git pull --rebase && git fetch -p
	mainup = main-update

	# Amend aliases
	amend = commit --amend
	amendf = commit --amend --no-edit

	# Reset aliases
	resetn = !sh -c 'git reset --soft HEAD~$1'
	## Fast amend - take current changes and apply on previous commit
	## Reset soft the previous commit
	back = resetn 1
	## Reset hard current changes
	drop = reset --hard

	# Commit, amend and push aliases
	## Fast commit - take current changes, commit and push
	patch = !sh -c 'git add . && git commit -m \"$1\" && git pull --rebase && git push' -
	## Commit current changes with "WIP" as message
	wip = !git add . && git ci -m WIP

	# git push aliases
	pushup = !git rev-parse --abbrev-ref HEAD | xargs git push -u origin $1
	pushf = !git rev-parse --abbrev-ref HEAD | xargs git push -u origin $1 --force-with-lease
	pushff = !git rev-parse --abbrev-ref HEAD | xargs git brd $1 | xargs git push -u origin $1

	# git branch aliases
	br = branch -vv
	bra = branch -a
	brr = branch -r
	brd = !sh -c 'git push origin :$1' -
	brm = !sh -c 'git br -D $@' -
	## Delete all but the main branch, it cleans up your local state
	brclean = !git switch-main && git branch | grep -v $(git branch-get-default) | xargs git br -D $1
	## List branches with some additional insights
	bradate = branch -a --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(committerdate:relative)'
	brafull = branch -a --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(committerdate:relative) \n\t %(contents:subject) - %(authorname) - %(color:red)sha:%(objectname)%(color:reset)'

	# git update-index aliases
	track = update-index --no-assume-unchanged
	untrack = update-index --assume-unchanged
	untracked = !git ls-files -v | grep "^[[:lower:]]"

	# git log aliases
	last = log -n 5 --oneline
	lc = !git oneline ORIG_HEAD.. --stat --no-merges
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all --date=local
	oneline = log --pretty=oneline --abbrev-commit --graph
	who = shortlog -sne
[pull]
	rebase = merges
	ff = only
[rerere]
	enabled = 1
	autoupdate = 1
[commit]
	gpgsign = true
[core]
	commentChar = ";"
	autocrlf = input
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = blue bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
